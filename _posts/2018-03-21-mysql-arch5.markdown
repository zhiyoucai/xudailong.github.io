---
layout: post
title:  "MySQL是如何使用索引的"
date:   2018-03-21 20:01:53
categories: MySQL
tags: MySQL
excerpt: 到底是怎么使用的呢
mathjax: true
---

**本文并非原创，而是对这篇文章的理解，文中所有的示例都是用原文里的：**

[何登成的原文](http://hedengcheng.com/?p=577)

新建一张表：

```sql
create table testc 
(
    a int primary key auto_increment,
    b int,
    c int, 
    d int,
    e varchar(20),
    key (b,c,d)
);
```

插入几条数据：

```sql
insert into testc values (4,3,1,1,'d');

insert into testc values (1,1,1,1,'a');

insert into testc values (8,8,8,8,'h');

insert into testc values (2,2,2,2,'b');

insert into testc values (5,2,3,5,'e');

insert into testc values (3,3,2,2,'c');

insert into testc values (7,4,5,5,'g');

insert into testc values (6,6,4,4,'f');
```

此时可以画出索引和数据列的关系简图：

![](http://wx3.sinaimg.cn/large/5fec9ab7ly1fpkon8y8g8j20ly0lijsp.jpg)

这里数据是按照堆表的形式画的，实际上InnoDB引擎的表是按照聚簇索引组织的，但是这不是本文的重点。

如果执行下面这条SQL，将会如何选择索引：

```sql
select * from testc where b >= 2 and b < 8 and c > 1 and d != 4 and e != 'a';
```

首先明确索引的最左前缀原则，此时索引扫描的下界是由b确定的，根据“b>=2”这个条件可以确定下界是[2,2,2]这个索引记录。

接下来确定上界，上界由>,=这种符号确定，因此观察到b<8这个条件，可以确定上界是[8,8,8]这个索引记录，因此索引的扫描范围一定是[[2,2,2],[8,8,8])，注意是左闭右开区间。

然后需要确定有哪些条件可以在索引上进行筛选，此时需要关注c和d上的条件，c>1代表可以排除掉[3,1,1]这个索引，而d!=4则可以排除掉[6,4,4]这个索引，因此此时需要扫描的索引行只有[2,2,2]，[2,3,5]，[3,2,2]和[4,5,5]。

在完全确定了索引可以做的事情之后，就要看看哪些条件不能使用索引，此时关注到e!='a'这个条件，这是没有办法在索引上进行的，只能定位到具体的记录上进行筛选。那么此时就需要进行回表操作了。

这里引申出几个概念如下：

1. Index Key：用于确定SQL查询在索引中的连续范围(起始范围+结束范围)的查询条件，被称之为Index Key

2. Index Filter：在完成了Index Key的提取后，索引列上的筛选条件

3. Table Filter：所有不属于索引列上的筛选条件

而IndexKey中又有上下界的概念，用于确定索引扫描的范围，因此可以细分为Index First Key和Index Last Key。

**Index First Key：**

从索引的第一个键值开始，检查其在where条件中是否存在，若存在并且条件是=、>=，则将对应的条件加入Index First Key之中，继续读取索引的下一个键值，使用同样的提取规则；若存在并且条件是>，则将对应的条件加入Index First Key中，同时终止Index First Key的提取；若不存在，同样终止Index First Key的提取。

**Index Last Key：**

从索引的第一个键值开始，检查其在where条件中是否存在，若存在并且条件是=、<=，则将对应条件加入到Index Last Key中，继续提取索引的下一个键值，使用同样的提取规则；若存在并且条件是 < ，则将条件加入到Index Last Key中，同时终止提取；若不存在，同样终止Index Last Key的提取。

